---
title: "Fitting a Bradley-Terry Model in R"
format: html
---

# **Introduction**

Sports analytics has grown tremendously in recent years due to increased demand for data-driven insights from machine learning tools and advanced statistical models. Sports analytics has become a discipline of data science and can help predict the score of games as well as ranking teams. However, in sports, the most fundamental question for teams and fans is who will win or lose. Building a binary outcome model for head-to-head games can help predict these results.

One of the most popular cumulative functions for a paired comparison model is the Bradley-Terry Model. This model estimates the probability that one team, i, wins against another, j, based on their relative "strength" parameters.

![](https://lh7-rt.googleusercontent.com/docsz/AD_4nXei86zb5MoxnEtb3WFBkfGp5gZ3DehNWytu0ANVxkRQlxDNSlO6AOIimzvBS_dH4KtQ6ZTyCuaQSSfodahQxhJ7y_GMcM-BqMInbBuh_AQX8IXlmqlI5zFCN1qEXe-Gi24Z-G55_A?key=a4IoOwSVDLGAwOB27BpxeAMY){alt="\\begin{aligned} \\text{Prob(} i \\text{ beats } j) &" fig-align="center" width="261"}

This user guide will explain how to fit a simple **Bradley-Terry model in R** between multiple teams. It will help guide you by providing examples from the hoopsno.csv file. At the end, you should have a basic understanding of how to fit a Bradley-Terry Model and how to interpret the results without too much complexity.

------------------------------------------------------------------------

## **Before Getting Started**

1.  If you do not have R or Rstudio dowloaded or installed, please visit this [link](https://rstudio-education.github.io/hopr/starting.html) for help.

2.  Once Installed, open R and create a new R script to install the `BradleyTerry2` package if you haven’t already.

    The BradleyTerry2 package is responsible for the specification and fitting of Bradley-Terry logit, probit or cauchit models to paircomparison data.

    `install.packages("BradleyTerry2")`

    `library(BradleyTerry2)`

------------------------------------------------------------------------

## **2. Creating a Data Set**

1.  Decide whether you want to load in a dataset or create your own dataset in R

2.  The data should be structured in a way that records paired comparisons, where one team wins against another. The data shouldn't contain missing values or duplicates. To find out more about data cleaning and specifically removing duplicate values please visit this [link](https://www.datanovia.com/en/lessons/identify-and-remove-duplicate-data-in-r/). For help with missing values, please visit this [link](https://cran.r-project.org/web/packages/BradleyTerry2/vignettes/BradleyTerry.pdf) which will help with a more complex solution by the inclusion of a ‘direct’ ability parameter for each player having missing predictor values.

3.  To create your own dataset in R, you should record the winning and losing teams and how many times each team won.

    Note: You can use as many teams as you would like but three teams are used in this example.

`data <- data.frame(`

`Winning Team = ("Team 1", "Team 2", "Team 3 ")`

`Losing Team = ("Team 2", "Team 3", "Team 1")`

``` Win Number Count = (# of times Team 1 beat Team 2 ,``# of times Team 2 beat Team 3, # of times Team 3 beat Team 1) ```

If you would like to load in your dataset into R, do the following:

`data \<- read.csv("filename.csv")`

Ex) hoopsno.csv file

`data \<- read.csv("hoopsno.csv")`

------------------------------------------------------------------------

## **3. Converting Columns**

A common error in fitting models is having columns that are incorrectly named, so please ensure they are correct before going any further.

Next, to fit the Bradley-Terry model, you have to convert the winner and loser columns to factors with the same levels

`data$winner <- factor(data$winner, levels = teams)`

`data$loser  <- factor(data$loser, levels = teams)`

The winner and loser columns are now factors (categorical variables).

`levels = teams` makes sure that all teams are represented, even if some are not stated explicitly in the winner column.

------------------------------------------------------------------------

## **4. Fit the Bradley-Terry Model**

Now we can fit the model using BTm()!

`bt_model <- BTm(` `outcome = cbind(data$win_count, rep(0, nrow(data))),` `player1 = data$winner,`\
`player2 = data$loser,`\
`data = data` )

-   The outcome variable combines the win count data and puts it into a format of wins and losses BTm() expects.

-   The player1 and player 2 variables correctly take in the winner and losers and the data uses the correct dataset

## **5. Interpreting the Results**

1.  Once fitted, you can use the `BTabilities(bt_model)` function to find the estimated team strengths (or abilities) from the fitted **Bradley-Terry model**. Your results should look like this:

![](images/Screenshot%202025-03-14%20at%203.33.18%20PM.png){fig-align="center" width="214"}

-   The team with zero ability is the baseline team which all teams are compared to, Iowa in this case. Teams with high negative ability like Nebraska have the worst team strength. Likewise, teams with high positive ability will have the best team strength.

-   You should also look at the standard error. If the standard error is high like in this example, the accuracy of these measuerments may be in doubt.

-   To lower standard error and improve the model, you should try to collect more data and also compare teams who relatively equal in strength.

    2.  Next, to find a more detailed depiction and statistical significance of team strengths use the summary function for the bradley-terry model.

        `summary(bt_model)`

![](images/Screenshot%202025-03-14%20at%203.32.49%20PM.png){fig-align="center" width="385"}

After using the summary function, you should look at the team strengths to see if they are significant using a p value of 0.05.

-   If it is \> 0.05, like it is for hoopsno.csv, the team's strength does not provide a strong enough effect to influence the result of the game.

-   If it is \< 0.05, the team's strength does provide a strong enough effect to influence the result of the game and can be used to predict outcomes.

------------------------------------------------------------------------

## **6. Predicting Outcomes**

After testing the significance of the team strengths, the team strengths can be used to calculate the probability of team **1 beating 2** using model coefficients:

For example, The odds of player ( Iowa ) beating player ( Nebraska ) can be computed as:\
$$ P(A \text{ beats } B) = \frac{e^{(strengthA)}}{e^{(strengthA)} + e^{(strengthB)}} $$ ------------------------------------------------------------------------ $$ P(Iowa \text{ beats } Nebraska) = \frac{e^{(0)}}{e^{(0)} + e^{(-1.1)}}=0.75 $$ ------------------------------------------------------------------------ ------------------------------------------------------------------------

## **7. Conclusion**

In this user guide, you went through the basics of fitting a Bradley-Terry model in R to predict the outcomes of head-to-head competitions between teams. By structuring paired comparison data correctly, converting columns into factors, and fitting the model using the `BTm()` function from the `BradleyTerry2` package, you estimated team strengths and their statistical significance.

You learned that teams with higher positive strength value teams are better than teams with high negative strength values. P values and standard errors can affect the reliability of the data and is important to check before predicting outcomes. While this guide does not go into more detail about incorporating home field advantage or advanced statistical methods, it does provide a good start to using a Bradley Terry Model. By using Bradley-Terry models, you are part of the growing field of sports analytics and can help make valuable insights and predictions for teams.

## **8. References**

@grolemund

@turner2012

@identifyduplicates

@glickman2024

@collegebasketballscores

@smith
